{"ast":null,"code":"import { unstable_batchedUpdates as r } from \"react-dom\";\nimport { isUsingStaticRendering as e, observer as t, Observer as n } from \"mobx-react-lite\";\nexport { Observer, useAsObservableSource, useLocalStore, isUsingStaticRendering, useStaticRendering } from \"mobx-react-lite\";\nimport o, { PureComponent as i, Component as a, forwardRef as c, Children as s, createContext as u, createElement as f } from \"react\";\nimport { createAtom as p, _allowStateChanges as l, Reaction as d, $mobx as y, isObservableArray as h, isObservableObject as b, isObservableMap as v, untracked as m, observable as O, configure as g } from \"mobx\";\nvar w = 0,\n    j = {};\n\nfunction x(r) {\n  return j[r] || (j[r] = function (r) {\n    if (\"function\" == typeof Symbol) return Symbol(r);\n    var e = \"__$mobx-react \" + r + \" (\" + w + \")\";\n    return w++, e;\n  }(r)), j[r];\n}\n\nfunction P(r, e) {\n  if (E(r, e)) return !0;\n  if (\"object\" != typeof r || null === r || \"object\" != typeof e || null === e) return !1;\n  var t = Object.keys(r),\n      n = Object.keys(e);\n  if (t.length !== n.length) return !1;\n\n  for (var o = 0; o < t.length; o++) if (!hasOwnProperty.call(e, t[o]) || !E(r[t[o]], e[t[o]])) return !1;\n\n  return !0;\n}\n\nfunction E(r, e) {\n  return r === e ? 0 !== r || 1 / r == 1 / e : r != r && e != e;\n}\n\nvar R = {\n  $$typeof: 1,\n  render: 1,\n  compare: 1,\n  type: 1,\n  childContextTypes: 1,\n  contextType: 1,\n  contextTypes: 1,\n  defaultProps: 1,\n  getDefaultProps: 1,\n  getDerivedStateFromError: 1,\n  getDerivedStateFromProps: 1,\n  mixins: 1,\n  propTypes: 1\n};\n\nfunction _(r, e, t) {\n  Object.hasOwnProperty.call(r, e) ? r[e] = t : Object.defineProperty(r, e, {\n    enumerable: !1,\n    configurable: !0,\n    writable: !0,\n    value: t\n  });\n}\n\nvar k = x(\"patchMixins\"),\n    A = x(\"patchedDefinition\");\n\nfunction S(r, e) {\n  for (var t = this, n = [], o = arguments.length - 2; o-- > 0;) n[o] = arguments[o + 2];\n\n  e.locks++;\n\n  try {\n    var i;\n    return null != r && (i = r.apply(this, n)), i;\n  } finally {\n    e.locks--, 0 === e.locks && e.methods.forEach(function (r) {\n      r.apply(t, n);\n    });\n  }\n}\n\nfunction C(r, e) {\n  return function () {\n    for (var t = [], n = arguments.length; n--;) t[n] = arguments[n];\n\n    S.call.apply(S, [this, r, e].concat(t));\n  };\n}\n\nfunction U(r, e, t) {\n  var n = function (r, e) {\n    var t = r[k] = r[k] || {},\n        n = t[e] = t[e] || {};\n    return n.locks = n.locks || 0, n.methods = n.methods || [], n;\n  }(r, e);\n\n  n.methods.indexOf(t) < 0 && n.methods.push(t);\n  var o = Object.getOwnPropertyDescriptor(r, e);\n\n  if (!o || !o[A]) {\n    var i = function r(e, t, n, o, i) {\n      var a,\n          c = C(i, o);\n      return (a = {})[A] = !0, a.get = function () {\n        return c;\n      }, a.set = function (i) {\n        if (this === e) c = C(i, o);else {\n          var a = r(this, t, n, o, i);\n          Object.defineProperty(this, t, a);\n        }\n      }, a.configurable = !0, a.enumerable = n, a;\n    }(r, e, o ? o.enumerable : void 0, n, r[e]);\n\n    Object.defineProperty(r, e, i);\n  }\n}\n\nvar T = y || \"$mobx\",\n    M = x(\"isUnmounted\"),\n    D = x(\"skipRender\"),\n    N = x(\"isForcingUpdate\");\n\nfunction $(r, t) {\n  return e() && console.warn(\"[mobx-react] It seems that a re-rendering of a React component is triggered while in static (server-side) mode. Please make sure components are rendered only once server-side.\"), this.state !== t || !P(this.props, r);\n}\n\nfunction I(r, e) {\n  var t = x(\"reactProp_\" + e + \"_valueHolder\"),\n      n = x(\"reactProp_\" + e + \"_atomHolder\");\n\n  function o() {\n    return this[n] || _(this, n, p(\"reactive \" + e)), this[n];\n  }\n\n  Object.defineProperty(r, e, {\n    configurable: !0,\n    enumerable: !0,\n    get: function () {\n      return o.call(this).reportObserved(), this[t];\n    },\n    set: function (r) {\n      this[N] || P(this[t], r) ? _(this, t, r) : (_(this, t, r), _(this, D, !0), o.call(this).reportChanged(), _(this, D, !1));\n    }\n  });\n}\n\nvar F = \"function\" == typeof c && c(function (r, e) {}).$$typeof;\n\nfunction W(r) {\n  if (!0 === r.isMobxInjector && console.warn(\"Mobx observer: You are trying to use 'observer' on a component that already has 'inject'. Please apply 'observer' before applying 'inject'\"), F && r.$$typeof === F) {\n    var s = r.render;\n    if (\"function\" != typeof s) throw new Error(\"render property of ForwardRef was not a function\");\n    return c(function () {\n      var r = arguments;\n      return o.createElement(n, null, function () {\n        return s.apply(void 0, r);\n      });\n    });\n  }\n\n  return \"function\" != typeof r || r.prototype && r.prototype.render || r.isReactClass || a.isPrototypeOf(r) ? function (r) {\n    var t = r.prototype;\n    if (t.componentWillReact) throw new Error(\"The componentWillReact life-cycle event is no longer supported\");\n    if (r.__proto__ !== i) if (t.shouldComponentUpdate) {\n      if (t.shouldComponentUpdate !== $) throw new Error(\"It is not allowed to use shouldComponentUpdate in observer based components.\");\n    } else t.shouldComponentUpdate = $;\n    I(t, \"props\"), I(t, \"state\");\n    var n = t.render;\n    return t.render = function () {\n      return function (r) {\n        var t = this;\n        if (!0 === e()) return r.call(this);\n        _(this, D, !1), _(this, N, !1);\n        var n = this.displayName || this.name || this.constructor && (this.constructor.displayName || this.constructor.name) || \"<component>\",\n            o = r.bind(this),\n            i = !1,\n            c = new d(n + \".render()\", function () {\n          if (!i && (i = !0, !0 !== t[M])) {\n            var r = !0;\n\n            try {\n              _(t, N, !0), t[D] || a.prototype.forceUpdate.call(t), r = !1;\n            } finally {\n              _(t, N, !1), r && c.dispose();\n            }\n          }\n        });\n\n        function s() {\n          i = !1;\n          var r = void 0,\n              e = void 0;\n          if (c.track(function () {\n            try {\n              e = l(!1, o);\n            } catch (e) {\n              r = e;\n            }\n          }), r) throw r;\n          return e;\n        }\n\n        return c.reactComponent = this, s[T] = c, this.render = s, s.call(this);\n      }.call(this, n);\n    }, U(t, \"componentWillUnmount\", function () {\n      !0 !== e() && (this.render[T] && this.render[T].dispose(), this[M] = !0);\n    }), r;\n  }(r) : t(r);\n}\n\nvar q = {\n  children: !0,\n  key: !0,\n  ref: !0\n},\n    L = u({}),\n    H = function (r) {\n  function e(e, t) {\n    r.call(this, e, t), this.state = Object.assign({}, t, X(e));\n  }\n\n  return r && (e.__proto__ = r), (e.prototype = Object.create(r && r.prototype)).constructor = e, e.prototype.render = function () {\n    return f(L.Provider, {\n      value: this.state\n    }, s.only(this.props.children));\n  }, e.getDerivedStateFromProps = function (r, e) {\n    if (\"production\" !== process.env.NODE_ENV && !P(e, Object.assign({}, e, X(r)))) throw new Error(\"MobX Provider: The set of provided stores has changed. Please avoid changing stores as the change might not propagate to all children\");\n    return e;\n  }, e;\n}(a);\n\nfunction X(r) {\n  var e = {};\n  if (!r) return e;\n\n  for (var t in r) V(t) && (e[t] = r[t]);\n\n  return e;\n}\n\nfunction V(r) {\n  return !q[r] && \"suppressChangedStoreWarning\" !== r;\n}\n\nfunction Y(r, e, t, n) {\n  var i = function (r, e) {\n    var t = r.displayName || r.name || r.constructor && r.constructor.name || \"Component\";\n    return e ? \"inject-with-\" + e + \"(\" + t + \")\" : \"inject(\" + t + \")\";\n  }(e, t),\n      c = function (t) {\n    function n() {\n      t.apply(this, arguments);\n    }\n\n    return t && (n.__proto__ = t), (n.prototype = Object.create(t && t.prototype)).constructor = n, n.prototype.render = function () {\n      var t = this.props,\n          n = t.forwardRef,\n          o = function (r, e) {\n        var t = {};\n\n        for (var n in r) Object.prototype.hasOwnProperty.call(r, n) && -1 === e.indexOf(n) && (t[n] = r[n]);\n\n        return t;\n      }(t, [\"forwardRef\"]);\n\n      return Object.assign(o, r(this.context || {}, o) || {}), n && !function (r) {\n        return !(r.prototype && r.prototype.render);\n      }(e) && (o.ref = this.props.forwardRef), f(e, o);\n    }, n;\n  }(a);\n\n  c.contextType = L, n && (c = W(c)), c.isMobxInjector = !0;\n  var s,\n      u,\n      p,\n      l = o.forwardRef(function (r, e) {\n    return o.createElement(c, Object.assign({}, r, {\n      forwardRef: e\n    }));\n  });\n  return s = e, u = l, p = Object.getOwnPropertyNames(Object.getPrototypeOf(s)), Object.getOwnPropertyNames(s).forEach(function (r) {\n    R[r] || -1 !== p.indexOf(r) || Object.defineProperty(u, r, Object.getOwnPropertyDescriptor(s, r));\n  }), l.wrappedComponent = e, l.displayName = i, l;\n}\n\nfunction z() {\n  for (var r, e = [], t = arguments.length; t--;) e[t] = arguments[t];\n\n  return \"function\" == typeof arguments[0] ? (r = arguments[0], function (e) {\n    return Y(r, e, r.name, !0);\n  }) : function (r) {\n    return Y(function (r) {\n      return function (e, t) {\n        return r.forEach(function (r) {\n          if (!(r in t)) {\n            if (!(r in e)) throw new Error(\"MobX injector: Store '\" + r + \"' is not available! Make sure it is provided by some Provider\");\n            t[r] = e[r];\n          }\n        }), t;\n      };\n    }(e), r, e.join(\"-\"), !1);\n  };\n}\n\nH.contextType = L;\nvar B = x(\"disposeOnUnmountProto\"),\n    G = x(\"disposeOnUnmountInst\");\n\nfunction J() {\n  var r = this;\n  (this[B] || []).concat(this[G] || []).forEach(function (e) {\n    var t = \"string\" == typeof e ? r[e] : e;\n    null != t && (Array.isArray(t) ? t.map(function (r) {\n      return r();\n    }) : t());\n  });\n}\n\nfunction K(r, e) {\n  if (Array.isArray(e)) return e.map(function (e) {\n    return K(r, e);\n  });\n  var t = Object.getPrototypeOf(r).constructor || Object.getPrototypeOf(r.constructor),\n      n = Object.getPrototypeOf(r.constructor);\n  if (t !== a && t !== i && n !== a && n !== i) throw new Error(\"[mobx-react] disposeOnUnmount only supports direct subclasses of React.Component or React.PureComponent.\");\n  if (\"string\" != typeof e && \"function\" != typeof e && !Array.isArray(e)) throw new Error(\"[mobx-react] disposeOnUnmount only works if the parameter is either a property key or a function.\");\n  var o = !!r[B] || !!r[G];\n  return (\"string\" == typeof e ? r[B] || (r[B] = []) : r[G] || (r[G] = [])).push(e), o || U(r, \"componentWillUnmount\", J), \"string\" != typeof e ? e : void 0;\n}\n\nfunction Q(r) {\n  function e(e, t, n, o, i, a) {\n    for (var c = [], s = arguments.length - 6; s-- > 0;) c[s] = arguments[s + 6];\n\n    return m(function () {\n      return o = o || \"<<anonymous>>\", a = a || n, null == t[n] ? e ? new Error(\"The \" + i + \" `\" + a + \"` is marked as required in `\" + o + \"`, but its value is `\" + (null === t[n] ? \"null\" : \"undefined\") + \"`.\") : null : r.apply(void 0, [t, n, o, i, a].concat(c));\n    });\n  }\n\n  var t = e.bind(null, !1);\n  return t.isRequired = e.bind(null, !0), t;\n}\n\nfunction Z(r) {\n  var e = typeof r;\n  return Array.isArray(r) ? \"array\" : r instanceof RegExp ? \"object\" : function (r, e) {\n    return \"symbol\" === r || \"Symbol\" === e[\"@@toStringTag\"] || \"function\" == typeof Symbol && e instanceof Symbol;\n  }(e, r) ? \"symbol\" : e;\n}\n\nfunction rr(r, e) {\n  return Q(function (t, n, o, i, a) {\n    return m(function () {\n      if (r && Z(t[n]) === e.toLowerCase()) return null;\n      var i;\n\n      switch (e) {\n        case \"Array\":\n          i = h;\n          break;\n\n        case \"Object\":\n          i = b;\n          break;\n\n        case \"Map\":\n          i = v;\n          break;\n\n        default:\n          throw new Error(\"Unexpected mobxType: \" + e);\n      }\n\n      var c = t[n];\n\n      if (!i(c)) {\n        var s = function (r) {\n          var e = Z(r);\n\n          if (\"object\" === e) {\n            if (r instanceof Date) return \"date\";\n            if (r instanceof RegExp) return \"regexp\";\n          }\n\n          return e;\n        }(c),\n            u = r ? \" or javascript `\" + e.toLowerCase() + \"`\" : \"\";\n\n        return new Error(\"Invalid prop `\" + a + \"` of type `\" + s + \"` supplied to `\" + o + \"`, expected `mobx.Observable\" + e + \"`\" + u + \".\");\n      }\n\n      return null;\n    });\n  });\n}\n\nfunction er(r, e) {\n  return Q(function (t, n, o, i, a) {\n    for (var c = [], s = arguments.length - 5; s-- > 0;) c[s] = arguments[s + 5];\n\n    return m(function () {\n      if (\"function\" != typeof e) return new Error(\"Property `\" + a + \"` of component `\" + o + \"` has invalid PropType notation.\");\n      var s = rr(r, \"Array\")(t, n, o);\n      if (s instanceof Error) return s;\n\n      for (var u = t[n], f = 0; f < u.length; f++) if ((s = e.apply(void 0, [u, f, o, i, a + \"[\" + f + \"]\"].concat(c))) instanceof Error) return s;\n\n      return null;\n    });\n  });\n}\n\nvar tr = {\n  observableArray: rr(!1, \"Array\"),\n  observableArrayOf: er.bind(null, !1),\n  observableMap: rr(!1, \"Map\"),\n  observableObject: rr(!1, \"Object\"),\n  arrayOrObservableArray: rr(!0, \"Array\"),\n  arrayOrObservableArrayOf: er.bind(null, !0),\n  objectOrObservableObject: rr(!0, \"Object\")\n};\nif (!a) throw new Error(\"mobx-react requires React to be available\");\nif (!O) throw new Error(\"mobx-react requires mobx to be available\");\n\"function\" == typeof r && g({\n  reactionScheduler: r\n});\nexport { W as observer, H as Provider, L as MobXProviderContext, z as inject, K as disposeOnUnmount, tr as PropTypes };","map":null,"metadata":{},"sourceType":"module"}