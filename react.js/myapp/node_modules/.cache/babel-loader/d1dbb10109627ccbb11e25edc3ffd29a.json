{"ast":null,"code":"import _initializerDefineProperty from \"/Users/meng/www/tp5/JS/react.js/myapp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/initializerDefineProperty\";\nimport _applyDecoratedDescriptor from \"/Users/meng/www/tp5/JS/react.js/myapp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/applyDecoratedDescriptor\";\nimport _initializerWarningHelper from \"/Users/meng/www/tp5/JS/react.js/myapp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/initializerWarningHelper\";\n\nvar _dec,\n    _class,\n    _descriptor,\n    _descriptor2,\n    _temp,\n    _dec2,\n    _class3,\n    _descriptor3,\n    _temp2,\n    _class5,\n    _class6,\n    _temp3,\n    _jsxFileName = \"/Users/meng/www/tp5/JS/react.js/myapp/src/mobx/TodoList.js\";\n\nimport React, { Component, Fragment } from 'react';\nimport 'antd/dist/antd.css';\nimport TodoListUi from '../tpl/TodoListUi';\nimport { observable, action, computed, ObservableMap } from 'mobx';\nimport PropTypes from 'prop-types';\nimport { observer, PropTypes as observablePropTypes } from 'mobx-react';\nlet Todo = (_dec = action.bound, (_class = (_temp = class Todo {\n  constructor(title) {\n    this.id = Math.random();\n\n    _initializerDefineProperty(this, \"title\", _descriptor, this);\n\n    _initializerDefineProperty(this, \"finished\", _descriptor2, this);\n\n    this.title = title;\n  }\n\n  toggle() {\n    this.finished = !this.finished;\n  }\n\n}, _temp), (_descriptor = _applyDecoratedDescriptor(_class.prototype, \"title\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function () {\n    return '';\n  }\n}), _descriptor2 = _applyDecoratedDescriptor(_class.prototype, \"finished\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function () {\n    return false;\n  }\n}), _applyDecoratedDescriptor(_class.prototype, \"toggle\", [_dec], Object.getOwnPropertyDescriptor(_class.prototype, \"toggle\"), _class.prototype)), _class));\nlet Store = (_dec2 = action.bound, (_class3 = (_temp2 = class Store {\n  constructor() {\n    _initializerDefineProperty(this, \"list\", _descriptor3, this);\n  }\n\n  createItem(title) {\n    this.list.unshift(new Todo(title));\n  }\n\n  get left() {\n    return this.list.filter(todo => {\n      return !todo.finished;\n    }).length;\n  }\n\n}, _temp2), (_descriptor3 = _applyDecoratedDescriptor(_class3.prototype, \"list\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function () {\n    return [];\n  }\n}), _applyDecoratedDescriptor(_class3.prototype, \"createItem\", [_dec2], Object.getOwnPropertyDescriptor(_class3.prototype, \"createItem\"), _class3.prototype), _applyDecoratedDescriptor(_class3.prototype, \"left\", [computed], Object.getOwnPropertyDescriptor(_class3.prototype, \"left\"), _class3.prototype)), _class3));\nconst store = new Store();\n\nlet TodoList2 = observer(_class5 = (_temp3 = _class6 = class TodoList2 extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      inputValue: ''\n    };\n  }\n\n  handInputChange(e) {\n    var value = e.target.value;\n    this.setState(prestate => {\n      prestate.inputValue = value;\n      return prestate;\n    });\n  }\n\n  handSubmit() {\n    store.createItem(this.state.inputValue);\n    this.setState(prestate => {\n      prestate.inputValue = '';\n      return prestate;\n    });\n  }\n\n  render() {\n    const store = this.props.store;\n    return React.createElement(Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"text\",\n      value: this.state.inputValue,\n      onChange: this.handInputChange.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      onClick: this.handSubmit.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, \"addSub\")), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, store.list.map((item, index) => {\n      return React.createElement(Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }, React.createElement(TodoItem, {\n        key: index,\n        item: item,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }), React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }, \"X\"));\n    })), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, store.left));\n  }\n\n}, _class6.propTypes = {\n  store: PropTypes.shape({\n    createItem: PropTypes.func,\n    list: observablePropTypes.observableArrayOf(observablePropTypes.observableObject).isRequired\n  }).isRequired\n}, _temp3)) || _class5;\n\nclass TodoItem extends Component {\n  handClick() {\n    this.props.item.toggle();\n  }\n\n  render() {\n    const item = this.props.item;\n    return React.createElement(Fragment, {\n      key: item.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      style: {\n        marginLeft: '10px'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"checkbox\",\n      onClick: this.handClick.bind(this),\n      checked: item.finished,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }), React.createElement(\"span\", {\n      style: {\n        marginLeft: '10px'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }, item.title)));\n  }\n\n}\n\nTodoItem.propTypes = {\n  item: PropTypes.shape({\n    id: PropTypes.number.isRequired,\n    title: PropTypes.string.isRequired,\n    finished: PropTypes.bool.isRequired\n  })\n};\n\nclass TodoList extends Component {\n  render() {\n    return React.createElement(TodoList2, {\n      store: store,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    });\n  }\n\n}\n\nexport default TodoList;","map":{"version":3,"sources":["/Users/meng/www/tp5/JS/react.js/myapp/src/mobx/TodoList.js"],"names":["React","Component","Fragment","TodoListUi","observable","action","computed","ObservableMap","PropTypes","observer","observablePropTypes","Todo","bound","constructor","title","id","Math","random","toggle","finished","Store","createItem","list","unshift","left","filter","todo","length","store","TodoList2","state","inputValue","handInputChange","e","value","target","setState","prestate","handSubmit","render","props","bind","map","item","index","propTypes","shape","func","observableArrayOf","observableObject","isRequired","TodoItem","handClick","marginLeft","number","string","bool","TodoList"],"mappings":";;;;;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAO,oBAAP;AACA,OAAOC,UAAP,MAAuB,mBAAvB;AACA,SAAQC,UAAR,EAAoBC,MAApB,EAA4BC,QAA5B,EAAsCC,aAAtC,QAA0D,MAA1D;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAAQC,QAAR,EAAkBD,SAAS,IAAIE,mBAA/B,QAAyD,YAAzD;IAEMC,I,WAODN,MAAM,CAACO,K,qBAPZ,MAAMD,IAAN,CAAU;AAINE,EAAAA,WAAW,CAACC,KAAD,EAAO;AAAA,SAHlBC,EAGkB,GAHbC,IAAI,CAACC,MAAL,EAGa;;AAAA;;AAAA;;AACd,SAAKH,KAAL,GAAaA,KAAb;AACH;;AACaI,EAAAA,MAAd,GAAsB;AAClB,SAAKC,QAAL,GAAgB,CAAC,KAAKA,QAAtB;AACH;;AATK,C,+EAELf,U;;;;;WAAmB,E;;4EACnBA,U;;;;;WAAsB,K;;;IAQrBgB,K,YAEDf,MAAM,CAACO,K,uBAFZ,MAAMQ,KAAN,CAAW;AAAA;AAAA;AAAA;;AAEOC,EAAAA,UAAd,CAAyBP,KAAzB,EAA+B;AAC3B,SAAKQ,IAAL,CAAUC,OAAV,CAAkB,IAAIZ,IAAJ,CAASG,KAAT,CAAlB;AACH;;AACD,MAAcU,IAAd,GAAoB;AAChB,WAAO,KAAKF,IAAL,CAAUG,MAAV,CAAkBC,IAAD,IAAQ;AAC5B,aAAO,CAACA,IAAI,CAACP,QAAb;AACH,KAFM,EAEJQ,MAFH;AAGH;;AATM,C,iFACNvB,U;;;;;WAAkB,E;;oNAIlBE,Q;AAML,MAAMsB,KAAK,GAAG,IAAIR,KAAJ,EAAd;;IAGMS,S,GADLpB,Q,+BAAD,MACMoB,SADN,SACwB5B,SADxB,CACiC;AAAA;AAAA;AAAA,SAO7B6B,KAP6B,GAOrB;AACJC,MAAAA,UAAU,EAAE;AADR,KAPqB;AAAA;;AAU7BC,EAAAA,eAAe,CAACC,CAAD,EAAG;AACd,QAAIC,KAAK,GAAGD,CAAC,CAACE,MAAF,CAASD,KAArB;AACA,SAAKE,QAAL,CAAeC,QAAD,IAAY;AACtBA,MAAAA,QAAQ,CAACN,UAAT,GAAsBG,KAAtB;AACA,aAAOG,QAAP;AACH,KAHD;AAIH;;AACDC,EAAAA,UAAU,GAAE;AACRV,IAAAA,KAAK,CAACP,UAAN,CAAiB,KAAKS,KAAL,CAAWC,UAA5B;AACA,SAAKK,QAAL,CAAeC,QAAD,IAAY;AACtBA,MAAAA,QAAQ,CAACN,UAAT,GAAsB,EAAtB;AACA,aAAOM,QAAP;AACH,KAHD;AAIH;;AACDE,EAAAA,MAAM,GAAE;AACJ,UAAMX,KAAK,GAAG,KAAKY,KAAL,CAAWZ,KAAzB;AACA,WACI,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAK;AAAO,MAAA,IAAI,EAAC,MAAZ;AAAmB,MAAA,KAAK,EAAE,KAAKE,KAAL,CAAWC,UAArC;AAAiD,MAAA,QAAQ,EAAE,KAAKC,eAAL,CAAqBS,IAArB,CAA0B,IAA1B,CAA3D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAL,EACI;AAAQ,MAAA,OAAO,EAAE,KAAKH,UAAL,CAAgBG,IAAhB,CAAqB,IAArB,CAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,CADJ,EAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEQb,KAAK,CAACN,IAAN,CAAWoB,GAAX,CAAe,CAACC,IAAD,EAAMC,KAAN,KAAc;AACzB,aACI,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,QAAD;AAAU,QAAA,GAAG,EAAEA,KAAf;AAAsB,QAAA,IAAI,EAAED,IAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAFJ,CADJ;AAOH,KARD,CAFR,CAHJ,EAgBI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAMf,KAAK,CAACJ,IAAZ,CAhBJ,CADJ;AAoBH;;AA9C4B,C,UACtBqB,S,GAAY;AACfjB,EAAAA,KAAK,EAAEpB,SAAS,CAACsC,KAAV,CAAgB;AACnBzB,IAAAA,UAAU,EAAEb,SAAS,CAACuC,IADH;AAEnBzB,IAAAA,IAAI,EAAEZ,mBAAmB,CAACsC,iBAApB,CAAsCtC,mBAAmB,CAACuC,gBAA1D,EAA4EC;AAF/D,GAAhB,EAGJA;AAJY,C;;AAgDvB,MAAMC,QAAN,SAAuBlD,SAAvB,CAAgC;AAQ5BmD,EAAAA,SAAS,GAAE;AACP,SAAKZ,KAAL,CAAWG,IAAX,CAAgBzB,MAAhB;AACH;;AACDqB,EAAAA,MAAM,GAAE;AACJ,UAAMI,IAAI,GAAG,KAAKH,KAAL,CAAWG,IAAxB;AACA,WACI,oBAAC,QAAD;AAAU,MAAA,GAAG,EAAEA,IAAI,CAAC5B,EAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAK,MAAA,KAAK,EAAE;AAACsC,QAAAA,UAAU,EAAE;AAAb,OAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAO,MAAA,IAAI,EAAC,UAAZ;AAAuB,MAAA,OAAO,EAAE,KAAKD,SAAL,CAAeX,IAAf,CAAoB,IAApB,CAAhC;AAA2D,MAAA,OAAO,EAAEE,IAAI,CAACxB,QAAzE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,EAEI;AAAM,MAAA,KAAK,EAAE;AAACkC,QAAAA,UAAU,EAAE;AAAb,OAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAoCV,IAAI,CAAC7B,KAAzC,CAFJ,CADJ,CADJ;AAQH;;AArB2B;;AAA1BqC,Q,CACKN,S,GAAY;AACfF,EAAAA,IAAI,EAAEnC,SAAS,CAACsC,KAAV,CAAgB;AAClB/B,IAAAA,EAAE,EAAEP,SAAS,CAAC8C,MAAV,CAAiBJ,UADH;AAElBpC,IAAAA,KAAK,EAAEN,SAAS,CAAC+C,MAAV,CAAiBL,UAFN;AAGlB/B,IAAAA,QAAQ,EAAEX,SAAS,CAACgD,IAAV,CAAeN;AAHP,GAAhB;AADS,C;;AAwBvB,MAAMO,QAAN,SAAuBxD,SAAvB,CAAgC;AAE5BsC,EAAAA,MAAM,GAAE;AACJ,WAAO,oBAAC,SAAD;AAAW,MAAA,KAAK,EAAEX,KAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACH;;AAJ2B;;AAOhC,eAAe6B,QAAf","sourcesContent":["import React, { Component, Fragment } from 'react';\nimport 'antd/dist/antd.css'\nimport TodoListUi from '../tpl/TodoListUi'\nimport {observable, action, computed, ObservableMap} from 'mobx'\nimport PropTypes from 'prop-types'\nimport {observer, PropTypes as observablePropTypes} from 'mobx-react'\n\nclass Todo{\n    id = Math.random();\n    @observable title = '';\n    @observable finished = false;\n    constructor(title){\n        this.title = title;\n    }\n    @action.bound toggle(){\n        this.finished = !this.finished;\n    }\n}\nclass Store{\n    @observable list = [];\n    @action.bound createItem(title){\n        this.list.unshift(new Todo(title))\n    }\n    @computed get left(){\n        return this.list.filter((todo)=>{\n            return !todo.finished\n        }).length;\n    }\n}\nconst store = new Store();\n\n@observer\nclass TodoList2 extends Component{\n    static propTypes = {\n        store: PropTypes.shape({\n            createItem: PropTypes.func,\n            list: observablePropTypes.observableArrayOf(observablePropTypes.observableObject).isRequired\n        }).isRequired\n    }\n    state = {\n        inputValue: '',\n    }\n    handInputChange(e){\n        var value = e.target.value;\n        this.setState((prestate)=>{\n            prestate.inputValue = value\n            return prestate\n        });\n    }\n    handSubmit(){\n        store.createItem(this.state.inputValue)\n        this.setState((prestate)=>{\n            prestate.inputValue = ''\n            return prestate\n        });\n    }\n    render(){\n        const store = this.props.store;\n        return (\n            <Fragment>\n                <div><input type=\"text\" value={this.state.inputValue} onChange={this.handInputChange.bind(this)}/>\n                    <button onClick={this.handSubmit.bind(this)}>addSub</button></div>\n                <div>\n                    {\n                        store.list.map((item,index)=>{\n                            return(\n                                <Fragment>\n                                    <TodoItem key={index} item={item}/>\n                                    <span>X</span>\n                                </Fragment>\n                            )\n\n                        })\n                    }\n                </div>\n                <div>{store.left}</div>\n            </Fragment>\n        )\n    }\n}\n\nclass TodoItem extends Component{\n    static propTypes = {\n        item: PropTypes.shape({\n            id: PropTypes.number.isRequired,\n            title: PropTypes.string.isRequired,\n            finished: PropTypes.bool.isRequired,\n        })\n    };\n    handClick(){\n        this.props.item.toggle();\n    }\n    render(){\n        const item = this.props.item;\n        return (\n            <Fragment key={item.id}>\n                <div style={{marginLeft: '10px'}}>\n                    <input type=\"checkbox\" onClick={this.handClick.bind(this)} checked={item.finished}/>\n                    <span style={{marginLeft: '10px'}}>{item.title}</span>\n                </div>\n            </Fragment>\n        )\n    }\n}\n\n\nclass TodoList extends Component{\n\n    render(){\n        return <TodoList2 store={store}/>\n    }\n}\n\nexport default TodoList;\n"]},"metadata":{},"sourceType":"module"}