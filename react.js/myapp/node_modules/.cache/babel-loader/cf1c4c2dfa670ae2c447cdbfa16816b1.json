{"ast":null,"code":"var _jsxFileName = \"/Users/meng/www/tp5/JS/react.js/myapp/src/tpl/TodoListUi.js\";\nimport React, { Component, Fragment } from 'react';\nimport { Button, Input, List } from \"antd\"; // 无状态组件 只有render函数的时候就可以这么写，无状态组件性能高。一般用于ui组件\n\nconst TodoListUi = props => {\n  return React.createElement(Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 7\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8\n    },\n    __self: this\n  }, React.createElement(Input, {\n    placeholder: \"\\u8BF7\\u8F93\\u5165\",\n    value: props.inputValue,\n    onChange: e => {\n      props.handInputChange(e);\n    },\n    style: {\n      width: '300px'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9\n    },\n    __self: this\n  }), React.createElement(Button, {\n    type: \"primary\",\n    onClick: e => {\n      props.addList();\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10\n    },\n    __self: this\n  }, \"addList\")), React.createElement(List, {\n    style: {\n      width: '500px'\n    } // header={<div>Header</div>}\n    // footer={<div>Footer</div>}\n    ,\n    bordered: true,\n    dataSource: props.list,\n    renderItem: (item, index) => React.createElement(List.Item, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18\n      },\n      __self: this\n    }, item, \" \", React.createElement(\"button\", {\n      onClick: index => {\n        props.deleteList(index);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19\n      },\n      __self: this\n    }, \"X\")),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12\n    },\n    __self: this\n  }));\n}; // class TodoListUi extends Component{\n//     constructor(props){\n//         super(props);\n//         this.state = props;\n//     }\n//     render(){\n//         return (\n//             <Fragment>\n//                 <div>\n//                     <Input placeholder='请输入' value={this.props.inputValue} onChange={(e)=>{this.props.handInputChange(e)}} style={{width: '300px'}}/>\n//                     <Button type='primary' onClick={(e)=>{this.props.addList()}}>addList</Button>\n//                 </div>\n//                 <List style={{width: '500px'}}\n//                     // header={<div>Header</div>}\n//                     // footer={<div>Footer</div>}\n//                       bordered\n//                       dataSource={this.props.list}\n//                       renderItem={(item, index) => (\n//                           <List.Item>\n//                               {item} <button onClick={(index)=>{this.props.deleteList(index)}}>X</button>\n//                           </List.Item>\n//                       )}\n//                 />\n//             </Fragment>\n//         )\n//     }\n// }\n\n\nexport default TodoListUi;","map":{"version":3,"sources":["/Users/meng/www/tp5/JS/react.js/myapp/src/tpl/TodoListUi.js"],"names":["React","Component","Fragment","Button","Input","List","TodoListUi","props","inputValue","e","handInputChange","width","addList","list","item","index","deleteList"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAAQC,MAAR,EAAgBC,KAAhB,EAAuBC,IAAvB,QAAkC,MAAlC,C,CAEA;;AACA,MAAMC,UAAU,GAAIC,KAAD,IAAS;AACxB,SACI,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,KAAD;AAAO,IAAA,WAAW,EAAC,oBAAnB;AAAyB,IAAA,KAAK,EAAEA,KAAK,CAACC,UAAtC;AAAkD,IAAA,QAAQ,EAAGC,CAAD,IAAK;AAACF,MAAAA,KAAK,CAACG,eAAN,CAAsBD,CAAtB;AAAyB,KAA3F;AAA6F,IAAA,KAAK,EAAE;AAACE,MAAAA,KAAK,EAAE;AAAR,KAApG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAEI,oBAAC,MAAD;AAAQ,IAAA,IAAI,EAAC,SAAb;AAAuB,IAAA,OAAO,EAAGF,CAAD,IAAK;AAACF,MAAAA,KAAK,CAACK,OAAN;AAAgB,KAAtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAFJ,CADJ,EAKI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE;AAACD,MAAAA,KAAK,EAAE;AAAR,KAAb,CACI;AACA;AAFJ;AAGM,IAAA,QAAQ,MAHd;AAIM,IAAA,UAAU,EAAEJ,KAAK,CAACM,IAJxB;AAKM,IAAA,UAAU,EAAE,CAACC,IAAD,EAAOC,KAAP,KACR,oBAAC,IAAD,CAAM,IAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACKD,IADL,OACW;AAAQ,MAAA,OAAO,EAAGC,KAAD,IAAS;AAACR,QAAAA,KAAK,CAACS,UAAN,CAAiBD,KAAjB;AAAwB,OAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WADX,CANV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALJ,CADJ;AAmBH,CApBD,C,CAqBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,eAAeT,UAAf","sourcesContent":["import React, { Component, Fragment } from 'react';\nimport {Button, Input, List} from \"antd\";\n\n// 无状态组件 只有render函数的时候就可以这么写，无状态组件性能高。一般用于ui组件\nconst TodoListUi = (props)=>{\n    return (\n        <Fragment>\n            <div>\n                <Input placeholder='请输入' value={props.inputValue} onChange={(e)=>{props.handInputChange(e)}} style={{width: '300px'}}/>\n                <Button type='primary' onClick={(e)=>{props.addList()}}>addList</Button>\n            </div>\n            <List style={{width: '500px'}}\n                // header={<div>Header</div>}\n                // footer={<div>Footer</div>}\n                  bordered\n                  dataSource={props.list}\n                  renderItem={(item, index) => (\n                      <List.Item>\n                          {item} <button onClick={(index)=>{props.deleteList(index)}}>X</button>\n                      </List.Item>\n                  )}\n            />\n        </Fragment>\n    )\n}\n// class TodoListUi extends Component{\n//     constructor(props){\n//         super(props);\n//         this.state = props;\n//     }\n//     render(){\n//         return (\n//             <Fragment>\n//                 <div>\n//                     <Input placeholder='请输入' value={this.props.inputValue} onChange={(e)=>{this.props.handInputChange(e)}} style={{width: '300px'}}/>\n//                     <Button type='primary' onClick={(e)=>{this.props.addList()}}>addList</Button>\n//                 </div>\n//                 <List style={{width: '500px'}}\n//                     // header={<div>Header</div>}\n//                     // footer={<div>Footer</div>}\n//                       bordered\n//                       dataSource={this.props.list}\n//                       renderItem={(item, index) => (\n//                           <List.Item>\n//                               {item} <button onClick={(index)=>{this.props.deleteList(index)}}>X</button>\n//                           </List.Item>\n//                       )}\n//                 />\n//             </Fragment>\n//         )\n//     }\n// }\nexport default TodoListUi;\n"]},"metadata":{},"sourceType":"module"}